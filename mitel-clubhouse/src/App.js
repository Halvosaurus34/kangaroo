import React, { useState, useEffect } from 'react';
import './App.css';
import axios from 'axios';
import jwt_decode from 'jwt-decode';
import Video from 'twilio-video';
import twilioSdk from './utilities/twilio';

import { Button, TextField, Card, CardContent } from '@material-ui/core';

function App() {

  const [state, setState] = useState({
    identity: null,  /* Will hold the fake name assigned to the client. The name is generated by faker on the server */
    roomName: '',    /* Will store the room name */
    roomNameErr: false,  /* Track error for room name TextField. This will enable us to show an error message when this variable is true */
    previewTracks: null,
    localMediaAvailable: false, /* Represents the availability of a LocalAudioTrack(microphone) and a LocalVideoTrack(camera) */
    hasJoinedRoom: false,
    activeRoom: null, // Track the current active room
    token: null,
    roomSID: null,
  });

  const handleRoomNameChange = (event) => {
    setState((prev) => ({
      ...prev,
      roomName: event.target.value,
    }));
  };

  const joinRoom = async () => {
    const userName = `user${Math.random()*100}`
    const roomName = state.roomName
    const token = twilioSdk.fetchVideoToken(userName, roomName)
    const currRoom = await twilioSdk.joinMediaRoom(token, roomName)
    twilioSdk.subscribeToRoomMedia(currRoom, 'remote-audio')
    twilioSdk.subscribeToMediaChanges(currRoom, 'remote-audio')
    // axios.get(`/token/${state.roomName}`)
    // .then((response) => {
    //   console.log(response);
    //   const { identity, token } = response.data;
    //   setState((prev) => ({
    //     ...prev,
    //     identity,
    //     token
    //   }))
    //   const decodedToken = jwt_decode(state.token);
    //   const TOKEN = JSON.stringify(decodedToken)
    //   if(!state.roomName.trim()) {
    //     setState((prev) => ({
    //       ...prev,
    //       roomNameErr: true,
    //     }));
    //     return;
    //   };
    //   console.log("Joining room '" + state.roomName + "'...");
    //   let connectOptions = {
    //     name: state.roomName
    //   };
    //   Video.connect(TOKEN, connectOptions)
    //   .then((data) => {
    //     console.log('Room Joined: ', data);
    //     console.log("Joined as '" + state.identity + "'");
    //     setState((prev) => ({
    //       ...prev,
    //       activeRoom: state.roomName,
    //       localMediaAvailable: true,
    //       hasJoinedRoom: true  // Removes ‘Join Room’ button and shows ‘Leave Room’
    //     }));
    //   });
    // })
    // .catch((error) => {
    //   console.log('Connect Error: ', error)
    //   alert('Could not connect to Twilio: ' + error.message);
    // });
  };

  const createNewRoom = () => {
    axios.post(`/createRoom/${state.roomName}`)
    .then((res) => {
      console.log(res.data.sid);
      setState((prev) => ({
        ...prev,
        roomSID: res.data.sid,
      }));
    })
  };

  return (
    <div className="App">
        <div>
          <h1>MITEL CORPORATE CLUBHOUSE</h1>
        </div>
        <audio id="remote-audio" autoPlay playsInline></audio>
        <Button variant="contained" onClick={createNewRoom}>Create Room</Button>

      <Card>
        <CardContent>
          <div className="flex-container">
            <div className="flex-item">
              <TextField id="RoomName" label="Room Name" onChange={(event) => {handleRoomNameChange(event)}}></TextField>
              <br />
              {state.hasJoinedRoom ? (
              <Button variant="contained" onClick={() => alert("Leave Room")}>Leave Room</Button> ):
              (<Button variant="contained" onClick={joinRoom}>Join Room</Button>)}
            </div>
        </div>
      </CardContent>
    </Card>
    </div>
  );
};

export default App;
