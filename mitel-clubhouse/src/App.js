import React, { useState } from 'react';
import './App.css';
import axios from 'axios';
// import jwt_decode from 'jwt-decode';
// import Video from 'twilio-video';
import twilioSdk from './utilities/twilio';
// import { disconnect } from 'twilio-video'
import { appTheme } from './AppTheme';
import { ThemeProvider } from '@material-ui/core/styles';
import Grid from '@material-ui/core/Grid';
import CssBaseline from "@material-ui/core/CssBaseline";
import Hallway from './components/Hallway.js';
import NavBar from "./components/NavBar";
import {
  BrowserRouter as Router,
  Switch,
  Route,
  Link,
  useParams,
} from "react-router-dom";


import { Button, TextField, Card, CardContent } from '@material-ui/core';

function App() {

  const [state, setState] = useState({
    identity: null,  /* Will hold the fake name assigned to the client. The name is generated by faker on the server */
    roomName: '',    /* Will store the room name */
    roomNameErr: false,  /* Track error for room name TextField. This will enable us to show an error message when this variable is true */
    previewTracks: null,
    localMediaAvailable: false, /* Represents the availability of a LocalAudioTrack(microphone) and a LocalVideoTrack(camera) */
    hasJoinedRoom: false,
    activeRoom: null, // Track the current active room
    token: null,
    roomSID: null,
  });

  const handleRoomNameChange = (newRoomName) => {
    setState((prev) => ({
      ...prev,
      roomName: newRoomName,
    }));
  };

  const joinRoom = async (roomName) => {
    console.log(roomName)
    handleRoomNameChange(roomName)
    const userName = `user${Math.random()*100}`;
    const token = twilioSdk.fetchVideoToken(userName, roomName);
    const currRoom = await twilioSdk.joinMediaRoom(token, roomName);
    setState((prev) => ({
      ...prev,
      activeRoom: currRoom,
    }))
    twilioSdk.subscribeToRoomMedia(currRoom, 'remote-audio');
    twilioSdk.subscribeToMediaChanges(currRoom, 'remote-audio');
  };

  const createNewRoom = (roomName) => {
    handleRoomNameChange(roomName)
    axios.post(`/createRoom/${roomName}`)
    .then((res) => {
      console.log(JSON.stringify(res))
      setState((prev) => ({
        ...prev,
        roomSID: res.data.sid,
      }));
    })
  };

  const leaveRoom = () => {
    if(state.roomName) {
      const videoRoom = state.activeRoom
      // videoRoom.disconnect();
      console.log('leaving room');
      twilioSdk.leaveMediaRoom(videoRoom, 'remote-audio');
      twilioSdk.subscribeToMediaChanges(videoRoom, 'remote-audio');
      setState((prev) => ({
        ...prev,
        roomName: '',
      }))
    };
  };

  return (
    <Router>
      <ThemeProvider theme={appTheme}>
        <CssBaseline />
        <NavBar createRoom={createNewRoom}/>
        <Grid container justify="center">
          <Hallway joinRoom={joinRoom}/>
        </Grid>
      </ThemeProvider>

      <Switch>
        <Route path="/user/:id">
          <h2>User to do</h2>
        </Route>
        <Route path="/room/:id">
          <h2>Room to do</h2>
          <button>Click Me</button>
          <video autoPlay playsInline></video>
        </Route>
      </Switch>
    </Router>
  );
};

export default App;
