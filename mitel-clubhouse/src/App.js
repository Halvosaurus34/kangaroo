import React, { useState, useEffect } from 'react';
import './App.css';
import axios from 'axios';

import { Button, TextField, Card, CardContent } from '@material-ui/core';

import Video from 'twilio-video';

function App() {

  const [state, setState] = useState({
    identity: null,  /* Will hold the fake name assigned to the client. The name is generated by faker on the server */
    roomName: '',    /* Will store the room name */
    roomNameErr: false,  /* Track error for room name TextField. This will enable us to show an error message when this variable is true */
    previewTracks: null,
    localMediaAvailable: false, /* Represents the availability of a LocalAudioTrack(microphone) and a LocalVideoTrack(camera) */
    hasJoinedRoom: false,
    activeRoom: null, // Track the current active room
    token: null
  });

  useEffect(() => {
    axios.get('/token')
    .then((results) => {
      const { identity, token } = results.data;
      setState((prev) => ({
        ...prev,
        identity,
        token
      }))
    });
  },[]);

  const handleRoomNameChange = (event) => {
    setState((prev) => ({
      ...prev,
      roomName: event.target.value,
    }));
  };

  const joinRoom = () => {
    console.log('Token', state.token)
    console.log('RoomName: ', state.roomName)
    console.log('Identity: ', state.identity);
    if(!state.roomName.trim()) {
      setState((prev) => ({
        ...prev,
        roomNameErr: true,
      }));
      return;
    };
    console.log("Joining room '" + state.roomName + "'...");
    let connectOptions = {
      name: state.roomName
    };
    Video.connect(state.token, connectOptions)
    .then(roomJoined, error => {
      alert('Could not connect to Twilio: ' + error.message);
    });
  };

  const roomJoined = () => {
    // Called when a participant joins a room
    console.log("Joined as '" + state.identity + "'");
    setState((prev) => ({
      ...prev,
      activeRoom: state.roomName,
      localMediaAvailable: true,
      hasJoinedRoom: true  // Removes ‘Join Room’ button and shows ‘Leave Room’
    }));
  };

  const createNewRoom = () => {
    axios.post(`/createRoom/${state.roomName}`)
    .then((res) => {
      console.log(res);
    })
  };

  return (
    <div className="App">
        <div>
          <h1>MITEL CORPORATE CLUBHOUSE</h1>
        </div>
        <Button variant="contained" onClick={createNewRoom}>Create Room</Button>

      <Card>
        <CardContent>
          <div className="flex-container">
            <div className="flex-item">
              <TextField hintText="Room Name" onChange={(event) => {handleRoomNameChange(event)}}
              errorText = {state.roomNameErr ? 'Room Name is required' : undefined} 
              />
              <br />
              {state.hasJoinedRoom ? (
              <Button variant="contained" onClick={() => alert("Leave Room")}>Leave Room</Button> ):
              (<Button variant="contained" onClick={joinRoom}>Join Room</Button>)}
            </div>
        </div>
      </CardContent>
    </Card>
    </div>
  );
};

export default App;
